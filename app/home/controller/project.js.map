{
    "version": 3,
    "sources": [
        "../../../src/home/controller/project.js"
    ],
    "names": [
        "Enum",
        "queryAction",
        "pageNo",
        "get",
        "pageSize",
        "session",
        "userInfo",
        "think",
        "isEmpty",
        "fail",
        "NOT_NOGIN",
        "code",
        "msg",
        "model",
        "join",
        "table",
        "as",
        "on",
        "page",
        "where",
        "id",
        "field",
        "countSelect",
        "result",
        "success",
        "pages",
        "totalCount",
        "totalPage",
        "tables",
        "count",
        "totalPages",
        "data",
        "queryallAction",
        "select",
        "addAction",
        "projectName",
        "projectPrefix",
        "proxyURL",
        "project",
        "find",
        "ADD_PROJECT_NAME_ERROR",
        "ADD_PROJECT_PREFIX_ERROR",
        "add",
        "projectId",
        "userId",
        "isManage",
        "insertId",
        "ADD_ERROR",
        "editAction",
        "update",
        "affectedRows",
        "EDIT_ERROR",
        "deleteAction",
        "interfaceCount",
        "DELETE_PROJECT_INTERFACE_ERROR",
        "delete",
        "DELETE_ERROR"
    ],
    "mappings": "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",
    "file": "../../../src/home/controller/project.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport  * as Enum from '../../enum.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async queryAction(){\n    let pageNo = this.get(\"pageNo\");\n    let pageSize = this.get(\"pageSize\");\n    let userInfo = await this.session(\"userInfo\");\n    if(think.isEmpty(userInfo)) {\n      return this.fail(Enum.NOT_NOGIN.code, Enum.NOT_NOGIN.msg);\n    }\n    let result = await this.model(\"project\").join({\n      table: \"userAuth\",\n      join: \"inner\",\n      as: 'ua',\n      on: ['id', 'projectId']\n    }).page(pageNo, pageSize).where({'ua.userId': userInfo.id}).field(\"project.id,project.projectName,project.projectPrefix,project.proxyURL,date_format(project.createTime, '%Y-%c-%d %h:%i:%s' ) as createTime\").countSelect();\n    if(think.isEmpty(result)) {\n      return this.success({pages: {pageNo: pageNo, pageSize: pageSize, totalCount: 0, totalPage: 0}, tables: []});\n    }\n    return this.success({pages: {pageNo: pageNo, pageSize: pageSize, totalCount: result.count, totalPage: result.totalPages}, tables: result.data});\n  }\n\n  async queryallAction() {\n    let userInfo = await this.session(\"userInfo\");\n    if(think.isEmpty(userInfo)) {\n      return this.fail(Enum.NOT_NOGIN.code, Enum.NOT_NOGIN.msg);\n    }\n    let result = await this.model(\"project\").join({\n      table: \"userAuth\",\n      join: \"inner\",\n      as: 'ua',\n      on: ['id', 'projectId']\n    }).where({'ua.userId': userInfo.id}).field(\"project.id,project.projectName,project.projectPrefix\").select();\n    return this.success(result);\n  }\n\n  async addAction() {\n    let projectName = this.get('projectName');\n    let projectPrefix = this.get('projectPrefix');\n    let proxyURL = this.get('proxyURL');\n    let userInfo = await this.session(\"userInfo\");\n    if(think.isEmpty(userInfo)) {\n      return this.fail(Enum.NOT_NOGIN.code, Enum.NOT_NOGIN.msg);\n    }\n    let model = this.model(\"project\");\n    // let insertId = await model.transaction( async function * () {\n    //   let projectId = await model.add({projectName: projectName, projectPrefix: projectPrefix, proxyURL: proxyURL});\n    //   return await this.model('userAuth').add({userId: userInfo.id, projectId: projectId, isManage: 1});\n    // })\n    // let insertId = await this.model(\"project\").add({projectName: projectName, projectPrefix: projectPrefix, proxyURL: proxyURL});\n    try {\n      // await model.startTrans();\n      let project = model.where({projectName: projectName}).find();\n      if(!think.isEmpty(project) && !think.isEmpty(project.id)) {\n        return this.fail(Enum.ADD_PROJECT_NAME_ERROR.code, Enum.ADD_PROJECT_NAME_ERROR.msg);\n      }\n      project = model.where({projectPrefix: projectPrefix}).find();\n      if(!think.isEmpty(project) && !think.isEmpty(project.id)) {\n        return this.fail(Enum.ADD_PROJECT_PREFIX_ERROR.code, Enum.ADD_PROJECT_PREFIX_ERROR.msg);\n      }\n\n      let projectId = await model.add({projectName: projectName, projectPrefix: projectPrefix, proxyURL: proxyURL});\n      let insertId = await this.model(\"userAuth\").add({userId: userInfo.id, projectId: projectId, isManage: 1});\n      // await model.commit();\n    } catch(e) {\n      // await model.rollback();\n      return this.fail(Enum.ADD_ERROR.code, Enum.ADD_ERROR.msg);\n    }\n    return this.success();\n  }\n\n  async editAction() {\n    let id = this.get('id');\n    let projectName = this.get('projectName');\n    let projectPrefix = this.get('projectPrefix');\n    let proxyURL = this.get('proxyURL');\n    let model = this.model(\"project\");\n    let userInfo = await this.session(\"userInfo\");\n    if(think.isEmpty(userInfo)) {\n      return this.fail(Enum.NOT_NOGIN.code, Enum.NOT_NOGIN.msg);\n    }\n    try {\n      let project = model.where({id: ['!=', id], projectName: projectName}).find();\n      if(!think.isEmpty(project) && !think.isEmpty(project.id)) {\n        return this.fail(Enum.ADD_PROJECT_NAME_ERROR.code, Enum.ADD_PROJECT_NAME_ERROR.msg);\n      }\n      project = model.where({id: ['!=', id], projectPrefix: projectPrefix}).find();\n      if(!think.isEmpty(project) && !think.isEmpty(project.id)) {\n        return this.fail(Enum.ADD_PROJECT_PREFIX_ERROR.code, Enum.ADD_PROJECT_PREFIX_ERROR.msg);\n      }\n\n      let affectedRows = await model.where({id: id}).update({projectName: projectName, projectPrefix: projectPrefix, proxyURL: proxyURL});\n    } catch(e) {\n      return this.fail(Enum.EDIT_ERROR.code, Enum.EDIT_ERROR.msg);\n    }\n    return this.success();\n  }\n\n  async deleteAction() {\n    let id = this.get('id');\n    let userInfo = await this.session(\"userInfo\");\n    if(think.isEmpty(userInfo)) {\n      return this.fail(Enum.NOT_NOGIN.code, Enum.NOT_NOGIN.msg);\n    }\n    let model = this.model(\"project\");\n    try {\n      let interfaceCount = this.model(\"interface\").field(\"id\").where({projectId: id}).count();\n      if(interfaceCount > 0) {\n        return this.fail(Enum.DELETE_PROJECT_INTERFACE_ERROR.code, Enum.DELETE_PROJECT_INTERFACE_ERROR.msg);\n      }\n      await this.model(\"userAuth\").where({projectId: id}).delete();\n      await model.where({id: id}).delete();\n    } catch(e) {\n      return this.fail(Enum.DELETE_ERROR.code, Enum.DELETE_ERROR.msg);\n    }\n    return this.success();\n  }\n}\n"
    ]
}